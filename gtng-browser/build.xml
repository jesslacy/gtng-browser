<?xml version="1.0" encoding="utf-8"?>
<project name="gtng-browser" default="prod">

	<description>Client-side ANT build file example</description>

	<target name="-load.properties" description="Set properties for this build">
		<!--YUI Compressor location-->
		<property name="yui.dir" value="${basedir}/tools/yuicompressor-2.4.2.jar" />
		<!--Source JS dir-->
		<property name="src.js.dir" value="${basedir}/js" />
		<!--Source CSS dir-->
		<property name="src.css.dir" value="${basedir}/css" />
		<!--Source Lint/Hint dir-->
		<property name="jslint.js" value="${basedir}/tools/jshint.js" />
		<!--Rhino dir-->
		<property name="js.jar" value="${basedir}/tools/js.jar" />
		<!--Output dir-->
		<property name="build.dir" value="build" />
		<!--Build version information -->
		<property name="build.major" value="1" />
		<property name="build.minor" value="1" />
		
		<property name="build.fileName" value="gtng" />
	</target>



	<!--Create build directories-->
	<target name="-init" depends="-load.properties" description="Create build directory structure">
		<!--Create the time stamp for the new build-->
		<tstamp>
			<format property="TODAY" pattern="EEE, d MMM yyyy HH:mm:ss Z" />
		</tstamp>

		<!--Delete previous build files-->
		<delete dir="${build.dir}" />

		<!--Recreate the build directories-->
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/js" />
		<mkdir dir="${build.dir}/css" />

		<!--Log the build timestamps to file-->
		<echo file="${build.dir}/js/tstamp.txt" append="false">Build Date: ${TODAY}</echo>
		<echo file="${build.dir}/css/tstamp.txt" append="false">Build Date: ${TODAY}</echo>
	</target>


	<!--JS Lint-->
	<target depends="-init" name="-js.lint">
		<pathconvert pathsep=" " property="jsfiles">
			<fileset dir="${build.dir}/js/">
				<include name="**/*.js" />
			</fileset>
		</pathconvert>
		<exec dir="${build.dir}/js/" executable="java" failonerror="true">
			<arg line="-jar ${js.jar} ${jslint.js} ${jsfiles}" />
		</exec>
		<echo>Finished</echo>
	</target>


	<!--Concatenate JS files-->
	<target name="-js.concatenate" depends="-js.lint" description="Concatenates specified JavaScript files">
		<concat destfile="${build.dir}/js/${build.fileName}.js">
			<fileset dir="${src.js.dir}" includes="**/*Model.js" />
			<fileset dir="${src.js.dir}" includes="**/*Collection.js" />
			<fileset dir="${src.js.dir}" includes="**/*Templates.js" />
			<fileset dir="${src.js.dir}" includes="**/*View.js" />
		</concat>
		<echo>Finished</echo>
	</target>



	<!--Concatenate CSS files-->
	<target name="-css.concatenate" depends="-init" description="Concatenates specified CSS files">
		<concat destfile="${build.dir}/css/styles.css">

			<!--All of the other files in the directory should appear after.-->
			<fileset dir="${src.css.dir}" includes="*.css" />
		</concat>
		<echo>Finished</echo>
	</target>



	<!--Minify JS files-->
	<target name="-js.minify" depends="-js.concatenate" description="Minifies JavaScript files">
		<apply executable="java" parallel="false" dest="${build.dir}/js">
			<fileset dir="${build.dir}/js" includes="${build.fileName}.js" />
			<arg line="-jar" />
			<arg path="${yui.dir}" />
			<srcfile />
			<arg line="-o" />
			<mapper type="glob" from="*.js" to="*-min.js" />
			<targetfile />
		</apply>
		<echo>Finished</echo>
	</target>



	<!--Minify CSS files-->
	<target name="-css.minify" depends="-css.concatenate" description="Minifies CSS files">
		<apply executable="java" parallel="false" dest="${build.dir}/css">
			<fileset dir="${build.dir}/css" includes="styles.css" />
			<arg line="-jar" />
			<arg path="${yui.dir}" />
			<arg line="--line-break 0" />
			<srcfile />
			<arg line="-o" />
			<mapper type="glob" from="*.css" to="*-min.css" />
			<targetfile />
		</apply>
		<echo>Finished</echo>
	</target>


	<!--Build-->
	<target name="prod" description="Builds project files for production use" depends="
            -load.properties, 
            -init, 
            -js.concatenate,
            -js.lint, 
            -css.concatenate, 
            -js.minify, 
            -css.minify">
	</target>

	<property name="dir.jetty" location="contrib/jetty-lib" />
	<property name="jetty.port" value="3030" />
	<path id="jetty.plugin.classpath">
		<fileset dir="${dir.jetty}" includes="*.jar" />
	</path>

	<taskdef classpathref="jetty.plugin.classpath" resource="tasks.properties" loaderref="jetty.loader" />

	<target name="jetty.run" depends="prod" description="Run the app locally with Jetty. Optionally, set the port with -Djetty.port=XXXX">
		<copy todir="${basedir}/WEB-INF">
			<fileset dir="${dir.jetty}/WEB-INF" />
		</copy>

		<jetty tempDirectory="${build.dir}/jetty-temp" jettyPort="${jetty.port}">
			<webApp name="files" warfile="${basedir}" contextpath="/" scanIntervalSeconds="5">
			</webApp>
		</jetty>
	</target>


</project>

